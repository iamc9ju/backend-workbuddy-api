// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": ""
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health-check": {
            "get": {
                "description": "Check the status of services and database connections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.HealthCheckResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/example.HealthCheckResponseError"
                        }
                    }
                }
            }
        },
        "/users/getAllUser": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "test get all user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Maximum number of users",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name or email or role",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/example.GetAllUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/example.Unauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/example.Forbidden"
                        }
                    }
                }
            },
        },
    },
    "definitions": {
        "domain.Article": {
            "type": "object",
            "properties": {
                "authorID": {
                    "type": "string"
                },
                "categoryID": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "excerpt": {
                    "type": "string"
                },
                "featuredImageURL": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isFeatured": {
                    "type": "boolean"
                },
                "isPublished": {
                    "type": "boolean"
                },
                "likeCount": {
                    "type": "integer"
                },
                "publishedAt": {
                    "type": "string"
                },
                "readTime": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "viewCount": {
                    "type": "integer"
                }
            }
        },
        "example.GoogleLoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Login successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "tokens": {
                    "$ref": "#/definitions/example.Tokens"
                },
                "user": {
                    "$ref": "#/definitions/example.GoogleUser"
                }
            }
        },
        "example.GetAllUserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Get all users successfully"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/example.User"
                    }
                }
            }
        },
        "example.User": {
            "type": "object",
            "properties": {
              "user_id": {
                "type": "integer",
                "example": 1
              },
              "email": {
                "type": "string",
                "example": "alice@example.com"
              },
              "username": {
                "type": "string",
                "example": "alice123"
              },
              "full_name": {
                "type": "string",
                "example": "Alice Smith"
              },
              "phone": {
                "type": "string",
                "example": "0812345678"
              },
              "role": {
                "type": "string",
                "example": "developer"
              },
              "profile_picture_url": {
                "type": "string",
                "example": "https://example.com/alice.jpg"
              },
              "location": {
                "type": "string",
                "example": "Bangkok"
              },
              "Gender": {
                "type": "string",
                "example": "female"
              },
              "Nationality": {
                "type": "string",
                "example": "thai"
              },
              "Bio": {
                "type": "string",
                "example": "Full-stack developer passionate about React and Go."
              }
            }
          }
          

    }

    
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:3000",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "go-fiber-boilerplate API documentation",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
